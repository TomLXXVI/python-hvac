"""
CREATE THE MODEL OF A MITSUBISHI R2 SERIES VRF-SYSTEM
WITH OUTDOOR UNIT PURY P-450 YSLM-A1(-BS)
IN HEATING MODE
"""
from hvac.vrf_system import model


# ------------------------------------------------------------------------------
# INSTANTIATE VRF DATA MODEL CREATOR
# ------------------------------------------------------------------------------
vrf_model_creator = model.VRFModelCreator(
    Tia_list=[15.0, 20.0, 25.0, 27.0],
    Tao_limits=(-20.0, 15),
)


# ------------------------------------------------------------------------------
# TEMPERATURE CORRECTION FOR CAPACITY RATIO
# ------------------------------------------------------------------------------
# See document `capacity_tables.pdf` p. 12 (2-329) - Outdoor unit temperature
# correction. Read points on the capacity ratio curve.

points = [
    (-20.0, 0.5 + 0.100),
    (-19.0, 0.5 + 0.113),
    (-18.0, 0.5 + 0.125),
    (-17.0, 0.5 + 0.136),
    (-16.0, 0.5 + 0.149),
    (-15.0, 0.5 + 0.163),
    (-14.0, 0.5 + 0.177),
    (-13.0, 0.5 + 0.187),
    (-12.0, 0.5 + 0.201),
    (-11.0, 0.5 + 0.213),
    (-10.0, 0.5 + 0.227),
    (-9.00, 0.5 + 0.247),
    (-8.00, 0.5 + 0.265),
    (-7.00, 0.5 + 0.286),
    (-6.00, 0.5 + 0.305),
    (-5.00, 0.5 + 0.324),
    (-4.00, 0.5 + 0.343),
    (-3.00, 0.5 + 0.360),
    (-2.00, 0.5 + 0.380),
    (-1.00, 0.5 + 0.401),
    (0.000, 0.5 + 0.417),
    (1.000, 0.5 + 0.438),
    (2.000, 0.5 + 0.458),
    (3.000, 0.5 + 0.476),
    (4.000, 0.5 + 0.500),
    (15.00, 0.5 + 0.500)
]

vrf_model_creator.create_QT_curve(points)


# ------------------------------------------------------------------------------
# TEMPERATURE CORRECTION FOR POWER INPUT RATIO
# ------------------------------------------------------------------------------
# See document `capacity_tables.pdf` p. 12 (2-329) - Outdoor unit temperature
# correction. Read points on the input power ratio curve.

# At indoor air temperature 15 째C
points_15 = [
    (-20.0, 0.4 + 0.500),
    (-19.0, 0.4 + 0.500),
    (-18.0, 0.4 + 0.504),
    (-17.0, 0.4 + 0.511),
    (-16.0, 0.4 + 0.514),
    (-15.0, 0.4 + 0.522),
    (-14.0, 0.4 + 0.528),
    (-13.0, 0.4 + 0.531),
    (-12.0, 0.4 + 0.541),
    (-11.0, 0.4 + 0.549),
    (-10.0, 0.4 + 0.556),
    (-9.00, 0.4 + 0.565),
    (-8.00, 0.4 + 0.573),
    (-7.00, 0.4 + 0.583),
    (-6.00, 0.4 + 0.593),
    (-5.00, 0.4 + 0.602),
    (-4.00, 0.4 + 0.614),
    (-3.00, 0.4 + 0.628),
    (-2.00, 0.4 + 0.638),
    (-1.00, 0.4 + 0.652),
    (0.000, 0.4 + 0.666),
    (1.000, 0.4 + 0.680),
    (2.000, 0.4 + 0.693),
    (3.000, 0.4 + 0.708),
    (4.000, 0.4 + 0.723),
    (5.000, 0.4 + 0.672),
    (6.000, 0.4 + 0.684),
    (7.000, 0.4 + 0.694),
    (8.000, 0.4 + 0.703),
    (9.000, 0.4 + 0.715),
    (10.00, 0.4 + 0.724),
    (11.00, 0.4 + 0.734),
    (12.00, 0.4 + 0.744),
    (13.00, 0.4 + 0.751),
    (14.00, 0.4 + 0.680),
    (15.00, 0.4 + 0.630)
]

vrf_model_creator.create_WT_curve(15, points_15)

# At indoor air temperature 20 째C
points_20 = [
    (-20.0, 0.4 + 0.583),
    (-19.0, 0.4 + 0.587),
    (-18.0, 0.4 + 0.590),
    (-17.0, 0.4 + 0.593),
    (-16.0, 0.4 + 0.601),
    (-15.0, 0.4 + 0.603),
    (-14.0, 0.4 + 0.611),
    (-13.0, 0.4 + 0.618),
    (-12.0, 0.4 + 0.625),
    (-11.0, 0.4 + 0.631),
    (-10.0, 0.4 + 0.640),
    (-9.00, 0.4 + 0.652),
    (-8.00, 0.4 + 0.659),
    (-7.00, 0.4 + 0.670),
    (-6.00, 0.4 + 0.679),
    (-5.00, 0.4 + 0.693),
    (-4.00, 0.4 + 0.703),
    (-3.00, 0.4 + 0.718),
    (-2.00, 0.4 + 0.731),
    (-1.00, 0.4 + 0.744),
    (0.000, 0.4 + 0.758),
    (1.000, 0.4 + 0.772),
    (2.000, 0.4 + 0.785),
    (3.000, 0.4 + 0.804),
    (4.000, 0.4 + 0.821),
    (5.000, 0.4 + 0.723),
    (6.000, 0.4 + 0.602),
    (7.000, 0.4 + 0.561),
    (8.000, 0.4 + 0.521),
    (9.000, 0.4 + 0.490),
    (10.00, 0.4 + 0.460),
    (11.00, 0.4 + 0.440),
    (12.00, 0.4 + 0.424),
    (13.00, 0.4 + 0.410),
    (14.00, 0.4 + 0.400),
    (15.00, 0.4 + 0.391)
 ]

vrf_model_creator.create_WT_curve(20, points_20)

# At indoor air temperature 25 째C
points_25 = [
    (-20.0, 0.4 + 0.672),
    (-19.0, 0.4 + 0.676),
    (-18.0, 0.4 + 0.678),
    (-17.0, 0.4 + 0.683),
    (-16.0, 0.4 + 0.686),
    (-15.0, 0.4 + 0.694),
    (-14.0, 0.4 + 0.696),
    (-13.0, 0.4 + 0.703),
    (-12.0, 0.4 + 0.713),
    (-11.0, 0.4 + 0.720),
    (-10.0, 0.4 + 0.731),
    (-9.00, 0.4 + 0.743),
    (-8.00, 0.4 + 0.752),
    (-7.00, 0.4 + 0.762),
    (-6.00, 0.4 + 0.775),
    (-5.00, 0.4 + 0.785),
    (-4.00, 0.4 + 0.729),
    (-3.00, 0.4 + 0.682),
    (-2.00, 0.4 + 0.640),
    (-1.00, 0.4 + 0.590),
    (0.000, 0.4 + 0.548),
    (1.000, 0.4 + 0.507),
    (2.000, 0.4 + 0.468),
    (3.000, 0.4 + 0.434),
    (4.000, 0.4 + 0.400),
    (5.000, 0.4 + 0.373),
    (6.000, 0.4 + 0.360),
    (7.000, 0.4 + 0.344),
    (8.000, 0.4 + 0.328),
    (9.000, 0.4 + 0.314),
    (10.00, 0.4 + 0.301),
    (11.00, 0.4 + 0.287),
    (12.00, 0.4 + 0.280),
    (13.00, 0.4 + 0.272),
    (14.00, 0.4 + 0.268),
    (15.00, 0.4 + 0.260)
]

vrf_model_creator.create_WT_curve(25, points_25)

# At indoor air temperature 27 째C
points_27 = [
    (-20.0, 0.4 + 0.703),
    (-19.0, 0.4 + 0.706),
    (-18.0, 0.4 + 0.710),
    (-17.0, 0.4 + 0.716),
    (-16.0, 0.4 + 0.720),
    (-15.0, 0.4 + 0.728),
    (-14.0, 0.4 + 0.735),
    (-13.0, 0.4 + 0.740),
    (-12.0, 0.4 + 0.748),
    (-11.0, 0.4 + 0.755),
    (-10.0, 0.4 + 0.764),
    (-9.00, 0.4 + 0.771),
    (-8.00, 0.4 + 0.724),
    (-7.00, 0.4 + 0.684),
    (-6.00, 0.4 + 0.639),
    (-5.00, 0.4 + 0.600),
    (-4.00, 0.4 + 0.560),
    (-3.00, 0.4 + 0.525),
    (-2.00, 0.4 + 0.491),
    (-1.00, 0.4 + 0.460),
    (0.000, 0.4 + 0.428),
    (1.000, 0.4 + 0.397),
    (2.000, 0.4 + 0.367),
    (3.000, 0.4 + 0.341),
    (4.000, 0.4 + 0.315),
    (5.000, 0.4 + 0.295),
    (6.000, 0.4 + 0.280),
    (7.000, 0.4 + 0.268),
    (8.000, 0.4 + 0.256),
    (9.000, 0.4 + 0.243),
    (10.00, 0.4 + 0.231),
    (11.00, 0.4 + 0.222),
    (12.00, 0.4 + 0.210),
    (13.00, 0.4 + 0.204),
    (14.00, 0.4 + 0.194),
    (15.00, 0.4 + 0.186)
]

vrf_model_creator.create_WT_curve(27, points_27)


# ------------------------------------------------------------------------------
# CREATE CAPFT-FUNCTION
# ------------------------------------------------------------------------------
vrf_model_creator.create_CAPFT_function()

# ------------------------------------------------------------------------------
# CREATE EIRFT-FUNCTION
# ------------------------------------------------------------------------------
vrf_model_creator.create_EIRFT_function()


# ------------------------------------------------------------------------------
# CREATE EIRFPLR-FUNCTION
# ------------------------------------------------------------------------------
# See document `capacity_tables.pdf` p. 31 (2-348) - Read points on the input
# power ratio curve vs. total capacity of indoor units for PURY-P450YSLM-A1 in
# heating mode.

points = [
    (225, 0.2 + 0.183),
    (240, 0.2 + 0.231),
    (260, 0.2 + 0.282),
    (280, 0.2 + 0.333),
    (300, 0.2 + 0.386),
    (320, 0.2 + 0.440),
    (340, 0.2 + 0.493),
    (360, 0.2 + 0.549),
    (380, 0.2 + 0.606),
    (400, 0.2 + 0.665),
    (420, 0.2 + 0.722),
    (440, 0.2 + 0.781),
    (450, 0.2 + 0.800),
    (675, 0.2 + 0.719)
]

vrf_model_creator.create_EIRFPLR_function(450, points)


# ------------------------------------------------------------------------------
# CREATE CR_corr FUNCTION
# ------------------------------------------------------------------------------
# See document `capacity_tables.pdf` p. 31 (2-348) - Read points on the capacity
# ratio curve vs. total capacity of indoor units for PURY-P450YSLM-A1 in
# heating mode.

points = [
    (225, 0.2 + 0.306),
    (450, 0.2 + 0.800),
    (675, 0.2 + 0.835)
]

vrf_model_creator.create_CR_corr_function(450, points)


# ------------------------------------------------------------------------------
# PIPING LENGTH CORRECTION
# ------------------------------------------------------------------------------
# See document `capacity_tables.pdf` p. 38 (2-355) - Read points on the curve
# heating capacity correction factor vs. piping equivalent length for
# PURY-P450YSLM-A1 in heating mode.

points = [
    (10, 0.8 + 0.200),
    (20, 0.8 + 0.191),
    (40, 0.8 + 0.176),
    (60, 0.8 + 0.163),
    (80, 0.8 + 0.150),
    (100, 0.8 + 0.138),
    (120, 0.8 + 0.126),
    (140, 0.8 + 0.115),
    (160, 0.8 + 0.105),
    (175, 0.8 + 0.098)
]

vrf_model_creator.create_Leq_corr_function(points)


# ------------------------------------------------------------------------------
# HEAT PUMP RUNTIME FRACTION
# ------------------------------------------------------------------------------
vrf_model_creator.create_HPRTF_function(0.5)


# ------------------------------------------------------------------------------
# DEFROST CYCLE CORRECTION
# ------------------------------------------------------------------------------
# See document `capacity_tables.pdf` p. 39 (2-356) - Read table for
# PURY-P450YSLM-A1.

points = [
    (6, 1.00),
    (4, 0.98),
    (2, 0.89),
    (1, 0.87),
    (0, 0.89),
    (-2, 0.90),
    (-4, 0.92),
    (-6, 0.95),
    (-8, 0.95),
    (-10, 0.95),
    (-20, 0.95)
]

vrf_model_creator.create_defrost_corr_function(points)

# ------------------------------------------------------------------------------
# SAVE THE VRF-MODEL
# ------------------------------------------------------------------------------
vrf_model_creator.save_model("./models/pury-p450-heating.pickle")
